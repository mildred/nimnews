# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - "*"
    tags:
      - "*"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Setup Nim environment
      uses: jiro4989/setup-nim-action@v1.0.5
      with:
        # The Nim version to download (if necessary) and use. Example: 1.0.2
        nim-version: stable # optional, default is stable
    
    - name: Construct release name
      id: vars
      run: |
        if [[ "${GITHUB_REF#refs/tags/}" = "${GITHUB_REF#refs/*/}" ]]; then
          echo ::set-output name=prerelease::false
          echo ::set-output name=release_name::${GITHUB_REF#refs/*/}
        else
          echo ::set-output name=prerelease::true
          echo ::set-output name=release_name::latest-${GITHUB_REF#refs/*/}
          git push origin +HEAD:refs/tags/latest-${GITHUB_REF#refs/*/}
        fi

    - name: Build
      run: |
        nimble install -d -y
        nim c -d:ssl src/nimnews
    
    - name: package
      run: |
        mkdir dist
        tar Jcf dist/nimnews-${{ steps.vars.outputs.release_name }}.tar.xz -C src nimnews
      
    # https://github.com/marketplace/actions/create-release
    - name: Release
      #if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/*"
        allowUpdates: true
        prerelease: ${{ fromJson(steps.vars.outputs.prerelease) }}
        tag: ${{ steps.vars.outputs.release_name }}
        token: ${{ secrets.GITHUB_TOKEN }}

